myData <- read.table("~/Documents/PUBS/growthData/testData.txt", header=c("treatment", "rep", "time", "count", "total"))
myData <- read.table("~/Documents/PUBS/growthData/testData.txt", col.names=c("treatment", "rep", "time", "count", "total"))
myData
summary(myData)
myFit <- (formula=normCount~treatment+rep+time, data=myData)
myFit <- (formula=normCount~treatment+rep+time, data=myData)
myFit <- lm(formula=normCount~treatment+rep+time, data=myData)
myData$normCount <- myData$count/myData$total
myFit <- lm(formula=normCount~treatment+rep+time, data=myData)
myFit
summary(myFit)
myData <- read.table("~/Documents/PUBS/growthData/testData2.txt", col.names=c("treatment", "rep", "time", "rate"))
#myFit <- lm(formula=normCount~treatment+rep+time, data=myData)
wilcox.test(rate~treatment+rep, data=myData)
#myFit <- lm(formula=normCount~treatment+rep+time, data=myData)
wilcox.test(formula=rate~treatment+rep, data=myData)
#myFit <- lm(formula=normCount~treatment+rep+time, data=myData)
wilcox.test(formula=rate~treatment, data=myData)
summary(wilcox.test(formula=rate~treatment, data=myData))
myData <- read.table("~/Documents/PUBS/growthData/growthStatTable.txt", header=FALSE)
myData <- read.table("~/Documents/PUBS/growthData/growthStatTable.txt", header=FALSE)
myData <- read.table("~/Documents/PUBS/growthData/growthStatTable.txt", header=FALSE)
colnames(myData) <- c('*', 'A', 'C', 'E', 'D', 'G', 'F', 'I', 'H', 'K', 'M', 'L', 'N', 'Q', 'P', 'S', 'R', 'T', 'W', 'V', 'Y')
row.names(myData) <- 1:140
myDataM <- as.matrix(myData)
aaOrder <- c("R", "H", "K", "D", "E", "S", "T", "Y", "N", "Q", "G", "A", "V", "C", "P", "L", "I", "M", "W", "F", "*")
myDataMOrdered <- myDataM[,aaOrder]
lr = c("10", "20", "30", "40", "50", "60", "70", "80", "90", "100", "110", "120", "130", "140")
lr2 <- ifelse(rownames(myData) %in% lr, rownames(myData), "")
myData <- read.table("~/Documents/PUBS/growthData/growthStatTable.txt", header=FALSE)
colnames(myData) <- c('*', 'A', 'C', 'E', 'D', 'G', 'F', 'I', 'H', 'K', 'M', 'L', 'N', 'Q', 'P', 'S', 'R', 'T', 'W', 'V', 'Y')
row.names(myData) <- 1:140
myDataM <- as.matrix(myData)
aaOrder <- c("R", "H", "K", "D", "E", "S", "T", "Y", "N", "Q", "G", "A", "V", "C", "P", "L", "I", "M", "W", "F", "*")
myDataMOrdered <- myDataM[,aaOrder]
lr = c("10", "20", "30", "40", "50", "60", "70", "80", "90", "100", "110", "120", "130", "140")
lr2 <- ifelse(rownames(myData) %in% lr, rownames(myData), "")
colorP2 <- viridis(24)
library(viridis)
library(gplots)
colorP2 <- viridis(24)
heatmap.2(t(myDataMOrdered), Rowv=FALSE, Colv=FALSE, dendrogram="none", trace="none", col=colorP2, labCol = lr2, cexRow = 0.5)
heatmap.2(t(myDataMOrdered), Rowv=FALSE, Colv=FALSE, dendrogram="none", trace="none", col=colorP2, labCol = lr2, cexRow = 0.5, xlab="a-syn position", ylab="substitution", main="-log10 p-value of growth rate change between untreated and rapamycin")
N = 1000 #number of individuals
M = 30   #number of non-causal SNPs
gs = matrix(0,nrow=N,ncol=M)
MAF = .5
gC = rbinom(N,1,MAF) #causal variant
MAF = 0.5 #minor allele frequency of all SNPs
set.seed = (42) #set random seed so we all get the same numbers
#generate 10 tight LD partners
rho = 0.9
for(i in 1:10) {
idx = rbinom(N,1,rho)
gs[,i]=gC*idx+rbinom(N,1,MAF)*(1-idx)
# test they have the right LD empirically
cat( 'Observed LD = ', cor( gs[,i], gC ), '\n' )
# Bonus: prove they have the right LD theoretically
}
# do the same for 10 moderate LD partners and 10 independent SNPs
rho = 0.6
# Just copied and pasted here, and changed the indices.
for (i in 11:20) {
idx = rbinom(N,1,rho)
gs[,i]=gC*idx+rbinom(N,1,MAF)*(1-idx)
# test they have the right LD empirically
cat( 'Observed LD = ', cor( gs[,i], gC ), '\n' )
}
# This is the same as doing nothing. We can do nothing here.
rho = 0
for (i in 21:30) {
idx = rbinom(N,1,rho)
gs[,i]=gC*idx+rbinom(N,1,MAF)*(1-idx)
# test they have the right LD empirically
cat( 'Observed LD = ', cor( gs[,i], gC ), '\n' )
}
beta = 0.3
pheno = gC*beta + rnorm(N)
zsC <- summary(lm(pheno~gC))$coef[2,3]
zs = sapply( 1:M, function(i) summary(lm(pheno~gs[,i]))$coef[2,3] )
#visualize the relationship between the mean z-scores at the tag SNPs and the z-score at the causal
rhos<-as.factor(c(rep(0.9, 10), rep(0.6, 10), rep(0.1, 10)))
library(ggplot2)
myData <- data.frame(zs, rhos)
ggplot(data=myData, aes(x=rhos, y=zs)) +
geom_boxplot() + geom_hline(yintercept = zsC) +
labs(x="rho with causal SNP", y="observed z score", title="z scores of tag SNPs compared to causal SNP (horizontal line)")
#what is the empirical LD between all pairs of SNPs including the causal SNP?
lds = matrix(0,nrow=M+1,ncol=M+1)
# Inefficient, but simple.
gsgc = cbind(gs, gC)
for (i in 1:M+1){
for (j in 1:M+1){
lds[i,j] = cor(gsgc[,i], gsgc[,j])^2
}
}
#calculate the LD scores. There should be M+1 of them
ldscores  <- colSums(lds)
#visualize LD score regression
plot( ldscores, c( zsC, zs )^2, ylab=expression(chi^2) )
chiSqs = c( zsC, zs )^2
#Use LD score regression to test for inflation and to estimate heritability
summary( lm( chiSqs ~ ldscores ) )
myd <- summary(lm(chiSqs ~ ldscores))
myd
myd$coefficients
beta = summary(lm(chiSqs ~ ldscores))[2,1]
beta = summary(lm(chiSqs ~ ldscores))$coefficients[2,1]
#What is the true heritability?
var(c(gs,gC)) / var(pheno)
heritabilityEstimate = beta * (M/N)
#Use LD score regression to test for inflation and to estimate heritability
summary( lm( chiSqs ~ ldscores ) )
#visualize LD score regression
plot( ldscores, c( zsC, zs )^2, ylab=expression(chi^2) )
#Use LD score regression to test for inflation and to estimate heritability
summary( lm( chiSqs ~ ldscores ) )
var(c(gs, gC))
dim(gs)
ggplot(data=myData, aes(x=rhos, y=zs)) +
geom_boxplot() + geom_hline(yintercept = zsC) +
labs(x="rho with causal SNP", y="observed z score", title="z scores of tag SNPs compared to causal SNP (horizontal line)")
heritabilityEstimate = beta * (M/N) # Shouldn't this be right? It doesn't seem like the right estimate...
source('~/Desktop/GeneticsLab/Lab.R')
setwd("~/Documents/winterY1/algorithms/homeworks/homework3/HW3_due_02_23")
myData <- read.table("optimizeGapPenalties.txt")
summary(myData)
colnames(myData) <- c("openGapCost", "extendGapCost", "falsePositiveRate")
ggplot(data=myData, aes(x=openGapCost, y=extendGapCost, fill=falsePositiveRate)) + geom_tile()
library(ggplot2)
ggplot(data=myData, aes(x=openGapCost, y=extendGapCost, fill=falsePositiveRate)) + geom_tile()
myData[myData$falsePositiveRate == min(myData$falsePositiveRate),]
